{"ast":null,"code":"var _jsxFileName = \"/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/StrucFuncs/QueueOp.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QueueOp(props) {\n  const {\n    gr,\n    setGr,\n    ch,\n    st\n  } = props;\n\n  const enqueue = e => {\n    e.preventDefault();\n    const value = document.getElementById(\"input1\").value;\n    console.log(st);\n    console.log(ch.id);\n    const myStruc = st.find(e => e.id === ch.id).tile; //array of coordinates\n\n    let top = -1;\n\n    for (let i = myStruc.length - 1; i >= 0; i--) {\n      let [row, col] = myStruc[i];\n      let a = gr[row][col];\n\n      if (a.txt === \"\") {\n        top = i;\n        break;\n      }\n    }\n\n    if (top > -1) {\n      const newGrid = gr.slice();\n      const [r, c] = myStruc[top];\n      const tile = newGrid[r][c];\n      const newTile = { ...tile,\n        txt: `${value}`\n      };\n      newGrid[r][c] = newTile;\n      setGr(newGrid);\n    }\n  };\n\n  const dequeue = e => {\n    e.preventDefault();\n    const myStruc = st.find(e => e.id === ch.id).tile; //array of coordinates\n\n    let top = -1,\n        tile,\n        carry = \"\";\n    const newGrid = gr.slice();\n\n    for (let i = 0; i < myStruc.length; i++) {\n      let [row, col] = myStruc[i];\n      let a = gr[row][col];\n\n      if (a.txt === \"\") {\n        continue;\n      }\n\n      tile = newGrid[row][col];\n      const newTile = { ...tile,\n        txt: `${carry}`\n      };\n      carry = tile.txt;\n      newGrid[row][col] = newTile;\n    }\n\n    setGr(newGrid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: enqueue,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input1\",\n        type: \"text\",\n        placeholder: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enqueue(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: dequeue,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Dequeue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"see items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_c = QueueOp;\nexport default QueueOp;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueueOp\");","map":{"version":3,"sources":["/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/StrucFuncs/QueueOp.js"],"names":["React","QueueOp","props","gr","setGr","ch","st","enqueue","e","preventDefault","value","document","getElementById","console","log","id","myStruc","find","tile","top","i","length","row","col","a","txt","newGrid","slice","r","c","newTile","dequeue","carry"],"mappings":"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","sourcesContent":["import React from 'react'\n\nfunction QueueOp(props) {\n    const {gr,setGr,ch,st} = props\n\n    const enqueue = (e) => {\n        e.preventDefault()\n        const value = document.getElementById(\"input1\").value\n        \n        console.log( st)\n        console.log( ch.id)\n\n        const myStruc = (st.find(e => e.id === ch.id).tile) //array of coordinates\n        let top =-1\n        for(let i =myStruc.length-1;i>=0;i--){\n            let [row,col] = myStruc[i]\n            let a = ((gr[row][col]))\n            if(a.txt === \"\"){\n                top = i\n                break\n            }\n        }\n\n        if(top > -1){\n            const newGrid = gr.slice()\n            const [r,c] = myStruc[top]\n            const tile = newGrid[r][c] \n            const newTile= {\n                ...tile,\n                txt:`${value}`\n\n                }\n            newGrid[r][c] = newTile\n            setGr(newGrid)\n        }\n\n\n    }\n\n    const dequeue = (e) => {\n        e.preventDefault()\n\n        const myStruc = (st.find(e => e.id === ch.id).tile) //array of coordinates\n        let top =-1,tile,carry =\"\"\n        const newGrid = gr.slice()\n\n        for(let i =0;i<myStruc.length;i++){\n            let [row,col] = myStruc[i]\n            let a = ((gr[row][col]))\n            if(a.txt === \"\"){\n                continue\n            }\n            tile = newGrid[row][col] \n            const newTile= {\n                ...tile,\n                txt:`${carry}`\n\n                }\n            carry = tile.txt \n\n            newGrid[row][col] = newTile\n\n        }\n        setGr(newGrid)\n\n\n\n\n    }\n \n    return (\n        \n        <div className = \"controls\" >\n            <form onSubmit = {enqueue}>\n                <input id=\"input1\" type=\"text\" placeholder=\"value\" />\n                <button>Enqueue(</button>\n\n            </form>\n\n            <form onSubmit = {dequeue}>\n                <button>Dequeue</button>\n\n            </form>\n            <div>\n                see items\n            </div>\n        </div>\n        \n    )\n}\n\nexport default QueueOp\n"]},"metadata":{},"sourceType":"module"}