{"ast":null,"code":"var _jsxFileName = \"/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/Tile.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile(props) {\n  const {\n    col,\n    row,\n    sType,\n    sId,\n    ch,\n    setCh,\n    pr,\n    setPr\n  } = props; //console.log(col +\" \"+ row+\" \"+sType+ \" \"+sId)\n\n  const mouseDown = (aRow, aCol) => {\n    const newAr = ch.slice();\n    newAr.push({\n      aRow,\n      aCol\n    });\n    setCh(neew);\n  };\n\n  const mouseLift = () => {\n    setCh({\n      hold: false\n    });\n    console.log(ch.cTiles);\n  };\n\n  const mouseEnter = (aRow, aCol) => {\n    if (!ch.hold) return;\n    const newAr = ch.cTiles.slice();\n    newAr.push({\n      aRow,\n      aCol\n    });\n    setCh({\n      cTiles: newAr\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myTile\",\n    onMouseDown: () => mouseDown(row, col),\n    onMouseUp: () => mouseLift(),\n    onMouseEnter: () => mouseEnter(row, col)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/Tile.js"],"names":["React","Tile","props","col","row","sType","sId","ch","setCh","pr","setPr","mouseDown","aRow","aCol","newAr","slice","push","neew","mouseLift","hold","console","log","cTiles","mouseEnter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM;AAACC,IAAAA,GAAD;AAAKC,IAAAA,GAAL;AAASC,IAAAA,KAAT;AAAeC,IAAAA,GAAf;AAAmBC,IAAAA,EAAnB;AAAsBC,IAAAA,KAAtB;AAA4BC,IAAAA,EAA5B;AAA+BC,IAAAA;AAA/B,MAAwCR,KAA9C,CADiB,CAEjB;;AAEA,QAAMS,SAAS,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAC7B,UAAMC,KAAK,GAAGP,EAAE,CAACQ,KAAH,EAAd;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAW;AAACJ,MAAAA,IAAD;AAAMC,MAAAA;AAAN,KAAX;AACAL,IAAAA,KAAK,CAACS,IAAD,CAAL;AACH,GAJD;;AAMA,QAAMC,SAAS,GAAG,MAAM;AACpBV,IAAAA,KAAK,CAAC;AAACW,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,EAAE,CAACe,MAAf;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAE,CAACX,IAAD,EAAMC,IAAN,KAAc;AAE5B,QAAG,CAACN,EAAE,CAACY,IAAP,EAAa;AACb,UAAML,KAAK,GAAGP,EAAE,CAACe,MAAH,CAAUP,KAAV,EAAd;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAW;AAACJ,MAAAA,IAAD;AAAMC,MAAAA;AAAN,KAAX;AACAL,IAAAA,KAAK,CAAC;AAACc,MAAAA,MAAM,EAACR;AAAR,KAAD,CAAL;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAG,QAAjB;AACK,IAAA,WAAW,EAAI,MAAMH,SAAS,CAACP,GAAD,EAAKD,GAAL,CADnC;AAEK,IAAA,SAAS,EAAI,MAAMe,SAAS,EAFjC;AAGK,IAAA,YAAY,EAAK,MAAMK,UAAU,CAACnB,GAAD,EAAKD,GAAL;AAHtC;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAhCQF,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React from 'react'\n\nfunction Tile(props) {\n    const {col,row,sType,sId,ch,setCh,pr,setPr} = props\n    //console.log(col +\" \"+ row+\" \"+sType+ \" \"+sId)\n\n    const mouseDown = (aRow,aCol) => {\n        const newAr = ch.slice()\n        newAr.push({aRow,aCol})\n        setCh(neew)\n    }\n    \n    const mouseLift = () => {\n        setCh({hold:false})\n        console.log(ch.cTiles)\n    }\n    \n    const mouseEnter =(aRow,aCol)=> {\n\n        if(!ch.hold) return \n        const newAr = ch.cTiles.slice()\n        newAr.push({aRow,aCol})\n        setCh({cTiles:newAr})\n    }\n    \n    return (\n        <div className = \"myTile\" \n             onMouseDown = {() => mouseDown(row,col)}\n             onMouseUp = {() => mouseLift()}\n             onMouseEnter = { () => mouseEnter(row,col) }>\n             \n        \n        </div>\n    )\n}\n\nexport default Tile\n\n"]},"metadata":{},"sourceType":"module"}