{"ast":null,"code":"var _jsxFileName = \"/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/StrucFuncs/GraphOp.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphOp(props) {\n  const {\n    gr,\n    setGr,\n    ch,\n    st,\n    type,\n    setSt,\n    setOp\n  } = props;\n\n  const addVertex = e => {\n    e.preventDefault();\n    setOp(\"Vertex\");\n  };\n\n  const addEdge = e => {\n    e.preventDefault();\n    let from = document.getElementById(\"input1\").value; //index = parseInt(index,10)\n\n    let to = document.getElementById(\"input2\").value;\n    let weight = document.getElementById(\"input3\").value;\n    const myStruc = st.find(e => e.id === ch.id).edges; //array of coordinates\n\n    const newGrid = gr.slice();\n    const myIndex = myStruc[index];\n    const i0 = myIndex[0];\n    const i1 = myIndex[1];\n    const tile = newGrid[i0][i1];\n    const newTile = { ...tile,\n      txt: `${value}`\n    };\n    newGrid[i0][i1] = newTile;\n    setGr(newGrid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addVertex,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Vertex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addVertex,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input1\",\n        type: \"number\",\n        placeholder: \"from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input2\",\n        type: \"number\",\n        placeholder: \"to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input3\",\n        type: \"number\",\n        placeholder: \"weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = GraphOp;\nexport default GraphOp;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphOp\");","map":{"version":3,"sources":["/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/StrucFuncs/GraphOp.js"],"names":["React","GraphOp","props","gr","setGr","ch","st","type","setSt","setOp","addVertex","e","preventDefault","addEdge","from","document","getElementById","value","to","weight","myStruc","find","id","edges","newGrid","slice","myIndex","index","i0","i1","tile","newTile","txt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM;AAACC,IAAAA,EAAD;AAAIC,IAAAA,KAAJ;AAAUC,IAAAA,EAAV;AAAaC,IAAAA,EAAb;AAAgBC,IAAAA,IAAhB;AAAqBC,IAAAA,KAArB;AAA2BC,IAAAA;AAA3B,MAAoCP,KAA1C;;AAEA,QAAMQ,SAAS,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,KAAK,CAAC,QAAD,CAAL;AAGH,GALD;;AAOA,QAAMI,OAAO,GAAIF,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIE,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAA7C,CAFmB,CAGnB;;AACA,QAAIC,EAAE,GAAGH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAA3C;AACA,QAAIE,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAA/C;AAIA,UAAMG,OAAO,GAAId,EAAE,CAACe,IAAH,CAAQV,CAAC,IAAIA,CAAC,CAACW,EAAF,KAASjB,EAAE,CAACiB,EAAzB,EAA6BC,KAA9C,CATmB,CASkC;;AACrD,UAAMC,OAAO,GAAGrB,EAAE,CAACsB,KAAH,EAAhB;AACA,UAAMC,OAAO,GAAGN,OAAO,CAACO,KAAD,CAAvB;AACA,UAAMC,EAAE,GAAGF,OAAO,CAAC,CAAD,CAAlB;AACA,UAAMG,EAAE,GAAGH,OAAO,CAAC,CAAD,CAAlB;AACA,UAAMI,IAAI,GAAGN,OAAO,CAACI,EAAD,CAAP,CAAYC,EAAZ,CAAb;AACA,UAAME,OAAO,GAAE,EACX,GAAGD,IADQ;AAEXE,MAAAA,GAAG,EAAE,GAAEf,KAAM;AAFF,KAAf;AAKAO,IAAAA,OAAO,CAACI,EAAD,CAAP,CAAYC,EAAZ,IAAkBE,OAAlB;AACA3B,IAAAA,KAAK,CAACoB,OAAD,CAAL;AAEH,GAvBD;;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA,4BACQ;AAAM,MAAA,QAAQ,EAAId,SAAlB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR,eAMQ;AAAM,MAAA,QAAQ,EAAIA,SAAlB;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAnDQT,O;AAqDT,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nfunction GraphOp(props) {\n    const {gr,setGr,ch,st,type,setSt,setOp} = props\n\n    const addVertex = (e) => {\n        e.preventDefault()\n        setOp(\"Vertex\")\n\n        \n    }\n\n    const addEdge = (e) => {\n        e.preventDefault()\n        let from = document.getElementById(\"input1\").value\n        //index = parseInt(index,10)\n        let to = document.getElementById(\"input2\").value\n        let weight = document.getElementById(\"input3\").value\n        \n\n\n        const myStruc = (st.find(e => e.id === ch.id).edges) //array of coordinates\n        const newGrid = gr.slice()\n        const myIndex = myStruc[index]\n        const i0 = myIndex[0]\n        const i1 = myIndex[1]\n        const tile = newGrid[i0][i1] \n        const newTile= {\n            ...tile,\n            txt:`${value}`\n\n            }\n        newGrid[i0][i1] = newTile\n        setGr(newGrid)\n\n    } \n\n    return (\n        <div className = \"controls\" >\n                <form onSubmit = {addVertex}>\n                    <button>Add Vertex</button>\n\n                </form>\n\n                <form onSubmit = {addVertex}>\n                    <input id=\"input1\" type=\"number\" placeholder=\"from\" />\n                    <input id=\"input2\" type=\"number\" placeholder=\"to\" />\n                    <input id=\"input3\" type=\"number\" placeholder=\"weight\" />\n                    <button>Add Edge</button>\n\n                </form>\n            </div>\n    )\n}\n\nexport default GraphOp\n"]},"metadata":{},"sourceType":"module"}