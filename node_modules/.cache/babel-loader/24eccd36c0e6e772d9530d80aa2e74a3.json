{"ast":null,"code":"var _jsxFileName = \"/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/Tile.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile() {\n  const {\n    col,\n    row,\n    sType,\n    sId,\n    ch,\n    setCh\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myTile\",\n    onMouseDown: onMouseDown(row, col)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nconst mouseDown = (aRow, aCol) => {\n  const newAr = chosen.slice();\n  newAr.push({\n    aRow,\n    aCol\n  });\n  setChosen({\n    cTiles: newAr,\n    hold: true\n  });\n};\n\nconst mouseLift = () => {\n  //pop up\n  setChosen({\n    hold: false\n  });\n};\n\nconst mouseEnter = (aRow, aCol) => {\n  if (!chosen.hold) return;\n  const newAr = chosen.slice();\n  newAr.push({\n    aRow,\n    aCol\n  });\n  setChosen({\n    cTiles: newAr\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/juvenal/Desktop/projects/StructureVisualizer/structure-vis/src/DataStructureVisualizer/Tile.js"],"names":["React","Tile","col","row","sType","sId","ch","setCh","props","onMouseDown","mouseDown","aRow","aCol","newAr","chosen","slice","push","setChosen","cTiles","hold","mouseLift","mouseEnter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM;AAACC,IAAAA,GAAD;AAAKC,IAAAA,GAAL;AAASC,IAAAA,KAAT;AAAeC,IAAAA,GAAf;AAAmBC,IAAAA,EAAnB;AAAsBC,IAAAA;AAAtB,MAA+BC,KAArC;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,QAAjB;AACK,IAAA,WAAW,EAAIC,WAAW,CAACN,GAAD,EAAKD,GAAL;AAD/B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAVQD,I;AAYT,eAAeA,IAAf;;AAEA,MAAMS,SAAS,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAC7B,QAAMC,KAAK,GAAGC,MAAM,CAACC,KAAP,EAAd;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAW;AAACL,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAX;AACAK,EAAAA,SAAS,CAAC;AAACC,IAAAA,MAAM,EAACL,KAAR;AAAcM,IAAAA,IAAI,EAAC;AAAnB,GAAD,CAAT;AACH,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACpB;AACAH,EAAAA,SAAS,CAAC;AAACE,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAT;AACH,CAHD;;AAKA,MAAME,UAAU,GAAE,CAACV,IAAD,EAAMC,IAAN,KAAc;AAC5B,MAAG,CAACE,MAAM,CAACK,IAAX,EAAiB;AACjB,QAAMN,KAAK,GAAGC,MAAM,CAACC,KAAP,EAAd;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAW;AAACL,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAX;AACAK,EAAAA,SAAS,CAAC;AAACC,IAAAA,MAAM,EAACL;AAAR,GAAD,CAAT;AACH,CALD","sourcesContent":["import React from 'react'\n\nfunction Tile() {\n    const {col,row,sType,sId,ch,setCh} = props\n    return (\n        <div className = \"myTile\" \n             onMouseDown = {onMouseDown(row,col)}\n             >\n             \n        \n        </div>\n    )\n}\n\nexport default Tile\n\nconst mouseDown = (aRow,aCol) => {\n    const newAr = chosen.slice()\n    newAr.push({aRow,aCol})\n    setChosen({cTiles:newAr,hold:true})\n}\n\nconst mouseLift = () => {\n    //pop up\n    setChosen({hold:false})\n}\n\nconst mouseEnter =(aRow,aCol)=> {\n    if(!chosen.hold) return \n    const newAr = chosen.slice()\n    newAr.push({aRow,aCol})\n    setChosen({cTiles:newAr})\n}\n"]},"metadata":{},"sourceType":"module"}